{"version":3,"sources":["components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Feedback/FeedbackOptions.styles.jsx","components/Feedback/FeedbackOptions.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Text","styled","p","Statistics","good","neutral","bad","total","positivePercentage","Title","h1","Section","title","Button","button","FeedbackOptions","onButtonGood","onButtonNeutral","onButtonBad","onShow","onHide","type","onClick","onMouseDown","onMouseEnter","NotificationText","Notification","message","App","state","vibilde","show","setState","visible","hide","buttonGood","prevState","buttonNeutral","buttonBad","this","Math","round","toFixed","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEaA,EAAOC,IAAOC,EAAV,uC,cCeFC,EAdI,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAqC,IAA9BC,0BAA8B,MAAX,MAAW,EACtE,OACI,mCACA,gCACA,eAACR,EAAD,WAAM,cAAC,IAAD,IAAN,UAAwBI,KACxB,eAACJ,EAAD,WAAM,cAAC,IAAD,IAAN,aAA+BK,KAC/B,eAACL,EAAD,WAAM,cAAC,IAAD,IAAN,SAA0BM,KAC1B,eAACN,EAAD,qBAAcO,KACd,eAACP,EAAD,iCAA0BQ,EAA1B,aCTCC,EAAQR,IAAOS,GAAV,2CCSHC,EATC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACV,OACI,mCACA,cAACH,EAAD,UAAQG,OCHPC,EAAQZ,IAAOa,OAAT,wVCaJC,EAbQ,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAEtE,OACI,mCACA,gCACA,cAACP,EAAD,CAASQ,KAAK,SAASC,QAAUN,EAAcO,YAAaJ,EAAQK,aAAcJ,EAAlF,kBACA,cAACP,EAAD,CAASQ,KAAK,SAASC,QAAUL,EAAiBM,YAAaJ,EAAQK,aAAcJ,EAArF,qBACA,cAACP,EAAD,CAASQ,KAAK,SAASC,QAAUJ,EAAaK,YAAaJ,EAAQK,aAAcJ,EAAjF,uBCPCK,EAAmBxB,IAAOC,EAAV,uCCQdwB,EARM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACnB,OACI,mCACA,cAACF,EAAD,UAAmBE,OCwEZC,E,4MAtEXC,MAAQ,CACJzB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLwB,SAAS,G,EAGXC,KAAO,WACH,EAAKC,SAAS,CAACC,SAAS,K,EAG5BC,KAAO,WACH,EAAKF,SAAS,CAACC,SAAQ,K,EAG3BE,WAAa,WACX,EAAKH,UAAS,SAAAI,GACV,MAAO,CACHhC,KAAMgC,EAAUhC,KAAO,O,EAIjCiC,cAAe,WACZ,EAAKL,UAAS,SAAAI,GACV,MAAO,CACH/B,QAAS+B,EAAU/B,QAAU,O,EAIvCiC,UAAY,WACV,EAAKN,UAAS,SAAAI,GACV,MAAO,CACH9B,IAAK8B,EAAU9B,IAAM,O,4CAKlC,WACI,MAAsCiC,KAAKV,MAApCI,EAAP,EAAOA,QAAS3B,EAAhB,EAAgBA,IAAKF,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QACrBG,EAAkB,UAAMgC,KAAKC,MAAOrC,GAAMA,EAAOE,GAAQ,KAAKoC,QAAQ,IAC5E,OACI,qCACA,cAAC,EAAD,CAAS9B,MAAM,0BAEf,cAAC,EAAD,CACAI,aAAcuB,KAAKJ,WACnBlB,gBAAiBsB,KAAKF,cACtBnB,YAAaqB,KAAKD,UAClBnB,OAAUoB,KAAKR,OAGf,cAAC,EAAD,CAASnB,MAAM,eAEdqB,GACD,cAAC,EAAD,CACA7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAK,UAAKH,EAAOC,EAAUC,GAC3BE,mBAAoBA,KAIlByB,GACF,cAAC,EAAD,CAAcN,QAAQ,6B,GAjEhBgB,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4fab1866.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Text = styled.p`\r\nmargin:0;\r\n`","import {Text} from './Statistics.styles';\r\nimport {CgSmile, CgSmileNone, CgSmileSad } from 'react-icons/cg'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage=\"100\"}) => {\r\n        return(\r\n            <>\r\n            <div>\r\n            <Text><CgSmile/> Good: {good}</Text>\r\n            <Text><CgSmileNone/> Neutral: {neutral}</Text>\r\n            <Text><CgSmileSad/> Bad: {bad}</Text>\r\n            <Text>Total: {total}</Text>\r\n            <Text>Positive feedback: {positivePercentage}%</Text>   \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default Statistics;","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\nfont-size: 2em;`\r\n","import {Title} from './Section.styles';\r\n\r\nconst Section = ({title}) => {\r\n        return(\r\n            <>\r\n            <Title>{title}</Title>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\nexport default Section;","import styled from '@emotion/styled';\r\n\r\nexport const Button =styled.button`\r\n  width: 90px;\r\n  border: solid 1px rgb(148, 146, 146);\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  margin-right: 10px;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  &:hover{\r\n    box-shadow: 0 0 20px rgba(5, 30, 255, 0.829);\r\n  }\r\n`;","import {Button} from './FeedbackOptions.styles.jsx';\r\n\r\nconst FeedbackOptions =({ onButtonGood, onButtonNeutral, onButtonBad, onShow, onHide }) =>{\r\n\r\n        return (\r\n            <>\r\n            <div>\r\n            <Button  type=\"button\" onClick= {onButtonGood} onMouseDown={onShow} onMouseEnter={onHide}>Good</Button>\r\n            <Button  type=\"button\" onClick= {onButtonNeutral} onMouseDown={onShow} onMouseEnter={onHide}>Neutral</Button>\r\n            <Button  type=\"button\" onClick= {onButtonBad} onMouseDown={onShow} onMouseEnter={onHide}>Bad</Button>\r\n            </div> \r\n            </>\r\n        )\r\n    }\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const NotificationText = styled.p`\r\nmargin:0;\r\n`","import {NotificationText} from'./Notification.styles';\r\n\r\nconst Notification = ({message}) =>{\r\n    return(\r\n        <>\r\n        <NotificationText>{message}</NotificationText>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { Component } from'react'\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        vibilde: false\n      }\n\n      show = () => {\n          this.setState({visible: true})\n      }\n\n      hide = () => {\n          this.setState({visible:false})\n      }\n\n      buttonGood = () => {\n        this.setState(prevState =>{\n            return {\n                good: prevState.good + 1,\n            }\n        })\n      }\n      buttonNeutral= () =>{\n         this.setState(prevState =>{\n             return {\n                 neutral: prevState.neutral + 1,\n             }\n         })\n       }\n       buttonBad = () =>{\n         this.setState(prevState =>{\n             return {\n                 bad: prevState.bad + 1,\n             }\n         })\n       }\n\n    render(){\n        const {visible, bad, good, neutral} = this.state;\n        const positivePercentage = `${Math.round((good/(good + bad)) * 100).toFixed(0)}`\n        return(\n            <>\n            <Section title=\"Please leave feedback\"></Section>\n\n            <FeedbackOptions \n            onButtonGood={this.buttonGood} \n            onButtonNeutral={this.buttonNeutral} \n            onButtonBad={this.buttonBad}\n            onShow = {this.show}\n            />\n\n            <Section title=\"Statictics\"></Section>\n\n            {visible &&\n            <Statistics \n            good={good} \n            neutral={neutral} \n            bad={bad} \n            total={`${good + neutral + bad}`} \n            positivePercentage={positivePercentage}>\n            </Statistics> \n            }\n            \n            {!visible &&\n            <Notification message=\"No feedback given\"></Notification>}\n        </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}