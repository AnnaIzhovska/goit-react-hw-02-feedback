{"version":3,"sources":["components/Container/Container.styles.jsx","components/Container/Container.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Container","styled","div","Containers","children","Text","p","Statistics","good","neutral","bad","total","positivePercentage","Title","h1","Section","title","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","NotificationText","Notification","message","App","state","handleIncreament","setState","prevState","countTotalFeedback","countpositivePercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAYC,IAAOC,IAAV,mP,OCQPC,EARI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACI,mCACI,cAACJ,EAAD,UAAYI,OCHXC,EAAOJ,IAAOK,EAAV,uC,OCyBFC,EAtBI,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAqC,IAA9BC,0BAA8B,MAAX,MAAW,EACtE,OACI,qCAEA,eAACP,EAAD,WAAM,cAAC,IAAD,IAAN,UAAwBG,KACxB,eAACH,EAAD,WAAM,cAAC,IAAD,IAAN,aAA+BI,KAC/B,eAACJ,EAAD,WAAM,cAAC,IAAD,IAAN,SAA0BK,KAC1B,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,WCXCC,EAAQZ,IAAOa,GAAV,2CCaHC,EAZC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACV,OACI,mCACI,cAACH,EAAD,UAAQG,OCJXC,EAAQhB,IAAOiB,OAAT,wVCsBJC,EArBQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC3B,OACI,mCACKD,EAAQE,KAAI,SAACC,GAAD,OACT,cAACN,EAAD,CAEIO,KAAK,SACLC,KAAMF,EACNG,QAAS,kBAAML,EAAgBE,IAJnC,SAKKA,GAJIA,SCNhBI,EAAmB1B,IAAOK,EAAV,uCCadsB,EAZM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACnB,OACI,mCACA,cAACF,EAAD,UAAmBE,OCgDZC,E,4MA9CXC,MAAQ,CACJvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPsB,iBAAmB,SAACP,GACtB,EAAKQ,UAAS,SAACC,GAAD,sBACXT,EAAOS,EAAUT,GAAQ,O,EAG3BU,mBAAqB,kBACtB,EAAKJ,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAEpD0B,wBAA0B,kBACxB,EAAKL,MAAMvB,KACP6B,KAAKC,MAAO,EAAKP,MAAMvB,KAAO,EAAK2B,qBAAwB,KAC3D,G,4CAEJ,WACI,MAA6BI,KAAKR,MAA3BrB,EAAP,EAAOA,IAAKF,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,QAClB,OACI,eAAC,EAAD,WACA,cAAC,EAAD,CAASO,MAAM,0BAEf,cAAC,EAAD,CACAI,QAASoB,OAAOC,KAAKF,KAAKR,OAC1BV,gBAAiBkB,KAAKP,mBAGtB,cAAC,EAAD,CAAShB,MAAM,eACVuB,KAAKJ,qBACE,cAAC,EAAD,CACI3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,4BAIjC,cAAC,EAAD,CAAcP,QAAQ,6B,GAzCxBa,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae044176.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  width: 500px;\r\n  margin: auto;\r\n  text-align: center;\r\n  border: dashed 5px rgba(5, 30, 255, 0.144);\r\n  border-radius: 10px;\r\n  padding: 30px;\r\n\r\n  &:hover{\r\n    box-shadow: 0 0 50px rgba(5, 30, 255, 0.596)\r\n  }\r\n`\r\n","import { Container } from './Container.styles';\r\n\r\nconst Containers = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Container>{children}</Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Containers;","import styled from '@emotion/styled'\r\n\r\nexport const Text = styled.p`\r\nmargin:0;\r\n`","  \r\nimport PropTypes from \"prop-types\";\r\nimport { Text } from './Statistics.styles';\r\nimport {CgSmile, CgSmileNone, CgSmileSad } from 'react-icons/cg'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage=\"100\"}) => {\r\n        return(\r\n            <>\r\n         \r\n            <Text><CgSmile/> Good: {good}</Text>\r\n            <Text><CgSmileNone/> Neutral: {neutral}</Text>\r\n            <Text><CgSmileSad/> Bad: {bad}</Text>\r\n            <Text>Total: {total}</Text>\r\n            <Text>Positive feedback: {positivePercentage}%</Text>   \r\n      \r\n            </>\r\n        )\r\n    }\r\n\r\n    Statistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\nfont-size: 2em;`\r\n","import PropTypes from \"prop-types\";\r\nimport { Title } from './Section.styles';\r\n\r\nconst Section = ({title}) => {\r\n        return(\r\n            <>\r\n                <Title>{title}</Title>\r\n            </>\r\n        )\r\n    }\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n  \r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button =styled.button`\r\n  width: 90px;\r\n  border: solid 1px rgb(148, 146, 146);\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  margin-right: 10px;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  &:hover{\r\n    box-shadow: 0 0 20px rgba(5, 30, 255, 0.829);\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Button } from './FeedbackOptions.styles.jsx';\r\n\r\nconst FeedbackOptions =({ options, onLeaveFeedback }) =>{\r\n        return (\r\n            <>\r\n                {options.map((option) => (\r\n                    <Button\r\n                        key={option}\r\n                        type=\"button\"\r\n                        name={option}\r\n                        onClick={() => onLeaveFeedback(option)}>\r\n                        {option}\r\n                    </Button>\r\n                ))}\r\n            </>\r\n        )\r\n}\r\n    \r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const NotificationText = styled.p`\r\nmargin:0;\r\n`","import PropTypes from \"prop-types\";\r\nimport { NotificationText } from './Notification.styles';\r\n\r\nconst Notification = ({message}) =>{\r\n    return(\r\n        <>\r\n        <NotificationText>{message}</NotificationText>\r\n        </>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react'\nimport Container from './components/Container'\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    }\n      handleIncreament = (name) => {\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n      };\n     countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countpositivePercentage = () =>\n    this.state.good\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n\n    render(){\n        const {bad, good, neutral} = this.state;\n        return(\n            <Container>\n            <Section title=\"Please leave feedback\"></Section>\n\n            <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncreament}\n                />\n                \n            <Section title=\"Statictics\"/>\n                {this.countTotalFeedback() ? (\n                        <Statistics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countpositivePercentage()}>\n                        </Statistics>\n                 \n                ) : (\n                    <Notification message=\"No feedback given\"></Notification>)}\n            </Container>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}